{"version":3,"sources":["Components/pages/Board/Components/Column/AddNote/AddNote.module.css","Components/pages/Board/Components/Column/Column.module.css","Components/pages/Board/Components/AddColumn/AddColumn.module.css","Components/pages/Board/Components/Note/Note.module.css","Components/pages/Board/Board.module.css","Components/redux/constants/board.js","Components/redux/actions/board.js","Components/pages/Board/Components/Column/AddNote/AddNote.js","Components/pages/Board/Components/Column/Column.js","Components/pages/Board/Components/AddColumn/AddColumn.js","Components/pages/Board/Components/Note/Note.js","Components/pages/Board/Board.js","Components/App.js","tools/reportWebVitals.js","Components/redux/reducers/board.js","Components/redux/reducers/index.js","index.js"],"names":["module","exports","CHANGE_NOTE_LOCATION","ADD_COLUMN","ADD_NOTE","changeNoteLocation","payload","type","addColumn","addNote","connect","dispatch","bindActionCreators","noteActions","id","onBlur","useState","title","setTitle","className","styles","container","ClickAwayListener","onClickAway","formContainer","Paper","inputContainer","TextField","autoFocus","value","onChange","target","Button","variant","color","onClick","columnId","style","fontSize","marginTop","background","Column","available","children","showForm","setState","titleContainer","Typography","component","Tooltip","aria-label","IconButton","size","AddNote","defaultProps","showButton","startIcon","button","Note","note","noteTitle","user","Avatar","width","height","Board","boardId","columns","changeLocation","setAvailable","elevation","columnContainer","onDragEnd","result","source","destination","includes","droppableId","split","pop","begin","beginNote","index","beginColumn","createBegin","end","endNote","endColumn","createEnd","onDragStart","map","name","notes","provided","ref","innerRef","droppableProps","length","noteId","draggableId","draggableProps","dragHandleProps","placeholder","state","board","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","quantityNotes","splice","removed","column","beginCloneNotes","endCloneNotes","beginCloneColumn","endCloneColumn","combineReducers","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a973c769.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddNote_container__2-v0H\",\"formContainer\":\"AddNote_formContainer__2XRpu\",\"inputContainer\":\"AddNote_inputContainer__ICo73\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Column_container__1-EF3\",\"titleContainer\":\"Column_titleContainer__3qSKc\",\"title\":\"Column_title__23xzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddColumn_container__7JK5Z\",\"formContainer\":\"AddColumn_formContainer__F-q6p\",\"button\":\"AddColumn_button__28_r8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"Note_note__1UNcz\",\"noteTitle\":\"Note_noteTitle__cqtX5\",\"user\":\"Note_user__2RWIw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Board_container__NTJQL\",\"title\":\"Board_title__3nLKm\",\"columnContainer\":\"Board_columnContainer__D4fui\"};","export const CHANGE_NOTE_LOCATION = 'CHANGE_NOTE_LOCATION';\nexport const ADD_COLUMN = 'ADD_COLUMN';\nexport const ADD_NOTE = 'ADD_NOTE';\n","import { CHANGE_NOTE_LOCATION, ADD_COLUMN, ADD_NOTE } from '../constants/board';\n\nexport const changeNoteLocation = (payload) => ({\n  type: CHANGE_NOTE_LOCATION,\n  payload,\n});\n\nexport const addColumn = (payload) => ({\n  type: ADD_COLUMN,\n  payload,\n});\n\nexport const addNote = (payload) => ({\n  type: ADD_NOTE,\n  payload,\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Paper from '@material-ui/core/Paper';\nimport * as noteActions from '../../../../../redux/actions/board';\nimport styles from './AddNote.module.css';\n\nconst AddColumn = ({ id, onBlur, addNote }) => {\n  const [title, setTitle] = useState('');\n\n  return (\n    <div className={styles.container}>\n      <ClickAwayListener onClickAway={() => onBlur()}>\n        <div className={styles.formContainer}>\n          <Paper className={styles.inputContainer}>\n            <TextField\n              id=\"add-note\"\n              autoFocus\n              value={title}\n              onChange={({ target: { value } }) => setTitle(value)}\n            />\n          </Paper>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              if (title !== '') {\n                addNote({ columnId: id, title });\n                setTitle('');\n                onBlur();\n              }\n            }}\n            style={{ fontSize: 12, marginTop: 10, background: 'seagreen' }}\n          >\n            Добавить заметку\n          </Button>\n        </div>\n      </ClickAwayListener>\n    </div>\n  );\n};\n\nAddColumn.propTypes = {\n  id: PropTypes.number.isRequired,\n  onBlur: PropTypes.func.isRequired,\n  addNote: PropTypes.func.isRequired,\n};\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      addNote: noteActions.addNote,\n    },\n    dispatch,\n  );\n\nexport default connect('', mapDispatch)(AddColumn);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport AddNote from './AddNote/AddNote';\nimport styles from './Column.module.css';\n\nconst Column = ({ id, title, available, children }) => {\n  const [showForm, setState] = useState(false);\n\n  return (\n    <div\n      className={styles.container}\n      style={{ background: available ? '#f4f5f7' : 'red' }}\n    >\n      <div className={styles.titleContainer}>\n        <Typography component=\"p\" variant=\"body1\" className={styles.title}>\n          {title}\n        </Typography>\n        <Tooltip title=\"Добавить заметку\" aria-label=\"add\">\n          <IconButton\n            aria-label=\"Добавить\"\n            size=\"small\"\n            onClick={() => setState(true)}\n          >\n            <AddIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      </div>\n      <div>{children}</div>\n      {showForm && <AddNote id={id} onBlur={() => setState(false)} />}\n    </div>\n  );\n};\n\nColumn.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  available: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.shape({}),\n    PropTypes.arrayOf(PropTypes.shape({})),\n  ]),\n};\n\nColumn.defaultProps = {\n  available: true,\n  children: [],\n  title: '',\n};\n\nexport default Column;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport * as noteActions from '../../../../redux/actions/board';\nimport styles from './AddColumn.module.css';\n\nconst AddColumn = ({ addColumn }) => {\n  const [showButton, setState] = useState(true);\n  const [title, setTitle] = useState('');\n\n  return (\n    <div className={styles.container}>\n      {showButton ? (\n        <Button\n          variant=\"outlined\"\n          color=\"default\"\n          startIcon={<NoteAddIcon />}\n          onClick={() => setState(false)}\n        >\n          Добавить ещё одну колонку\n        </Button>\n      ) : (\n        <ClickAwayListener onClickAway={() => setState(true)}>\n          <div className={styles.formContainer}>\n            <TextField\n              id=\"add-column\"\n              autoFocus\n              value={title}\n              onChange={({ target: { value } }) => setTitle(value)}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => {\n                if (title !== '') {\n                  addColumn(title);\n                  setState(true);\n                  setTitle('');\n                }\n              }}\n              className={styles.button}\n              style={{ fontSize: 12, marginTop: 10, background: 'seagreen' }}\n            >\n              Сохранить\n            </Button>\n          </div>\n        </ClickAwayListener>\n      )}\n    </div>\n  );\n};\n\nAddColumn.propTypes = {\n  addColumn: PropTypes.func.isRequired,\n};\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      addColumn: noteActions.addColumn,\n    },\n    dispatch,\n  );\n\nexport default connect('', mapDispatch)(AddColumn);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport styles from './Note.module.css';\n\nconst Note = ({ title }) => (\n  <Paper className={styles.note}>\n    <Typography component=\"p\" variant=\"caption\" className={styles.noteTitle}>\n      {title}\n    </Typography>\n    <div className={styles.user}>\n      <Avatar style={{ width: 35, height: 35 }}>A</Avatar>\n    </div>\n  </Paper>\n);\n\nNote.propTypes = {\n  title: PropTypes.string,\n};\n\nNote.defaultProps = {\n  title: '',\n};\n\nexport default Note;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport * as noteActions from '../../redux/actions/board';\n\nimport Column from './Components/Column/Column';\nimport AddColumn from './Components/AddColumn/AddColumn';\nimport Note from './Components/Note/Note';\nimport styles from './Board.module.css';\n\nconst Board = ({ boardId, columns, changeLocation }) => {\n  const [available, setAvailable] = useState([]);\n\n  const onDragAndDrop = (result) => {\n    const { source, destination } = result;\n    if (!destination) {\n      return;\n    }\n    const createBegin = ({ droppableId, index }) => ({\n      beginNote: index,\n      beginColumn: +droppableId.split('-').pop(),\n    });\n    const createEnd = ({ droppableId, index }) => ({\n      endNote: index,\n      endColumn: +droppableId.split('-').pop(),\n    });\n\n    if (available.includes(+destination.droppableId.split('-').pop())) {\n      changeLocation({\n        begin: createBegin(source),\n        end: createEnd(destination),\n      });\n    }\n    setAvailable([]);\n  };\n\n  const onDragStart = (result) => {\n    const {\n      source: { droppableId },\n    } = result;\n    const index = +droppableId.split('-').pop();\n    setAvailable([index - 1, index, index + 1]);\n  };\n\n  return (\n    <Paper elevation={3} className={styles.container}>\n      <Typography component=\"h3\" variant=\"h3\" className={styles.title}>\n        Board\n      </Typography>\n      <div className={styles.columnContainer} key={boardId}>\n        <DragDropContext onDragEnd={onDragAndDrop} onDragStart={onDragStart}>\n          {columns.map(({ columnId, name, notes }) => (\n            <Droppable\n              droppableId={`column-${columnId}`}\n              key={`column-${columnId}`}\n            >\n              {(provided) => (\n                <div\n                  key={columnId}\n                  className={`column-${columnId}`}\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  <Column\n                    id={columnId}\n                    title={name}\n                    available={\n                      available.length === 0\n                        ? true\n                        : available.includes(columnId)\n                    }\n                  >\n                    {notes.map(({ noteId, title }, index) => (\n                      <Draggable\n                        key={`column-${columnId}_note-${noteId}`}\n                        draggableId={`column-${columnId}_note-${noteId}`}\n                        index={index}\n                      >\n                        {/* eslint-disable-next-line no-shadow */}\n                        {(provided) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <Note title={title} />\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                  </Column>\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </DragDropContext>\n        <AddColumn />\n      </div>\n    </Paper>\n  );\n};\n\nBoard.propTypes = {\n  boardId: PropTypes.number.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      columnId: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      notes: PropTypes.arrayOf(PropTypes.shape({})),\n    }),\n  ),\n  changeLocation: PropTypes.func.isRequired,\n};\n\nBoard.defaultProps = {\n  columns: [],\n};\n\nconst mapState = (state) => ({\n  boardId: state.board.boardId || 0,\n  columns: state.board.columns || [],\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      changeLocation: noteActions.changeNoteLocation,\n    },\n    dispatch,\n  );\n\nexport default connect(mapState, mapDispatch)(Board);\n","import React from 'react';\nimport Board from './pages/Board/Board';\n\nfunction App() {\n  return (\n    <div>\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CHANGE_NOTE_LOCATION, ADD_COLUMN, ADD_NOTE } from '../constants/board';\n\nconst initialState = {\n  boardId: 1,\n  quantityNotes: 8,\n  columns: [\n    {\n      columnId: 1,\n      name: 'Наряды',\n      notes: [\n        { noteId: 1, title: 'Установка плит под фундамент' },\n        {\n          noteId: 2,\n          title:\n            'Земельные работы по подготовке площадки по установке плит для несущей стены',\n        },\n      ],\n    },\n    {\n      columnId: 2,\n      name: 'В работе',\n      notes: [\n        { noteId: 3, title: 'Установка плит под фундамент' },\n        { noteId: 4, title: 'Установка плит под фундамент' },\n      ],\n    },\n    {\n      columnId: 3,\n      name: 'Приёмка',\n      notes: [\n        {\n          noteId: 5,\n          title:\n            'Земельные работы по подготовке площадки по установке плит для несущей стены',\n        },\n        { noteId: 6, title: 'Установка плит под фундамент' },\n      ],\n    },\n    {\n      columnId: 4,\n      name: 'Завершено',\n      notes: [\n        { noteId: 7, title: 'Установка плит под фундамент' },\n        { noteId: 8, title: 'Установка плит под фундамент' },\n      ],\n    },\n  ],\n};\n\nconst changeNoteLocation = (state, payload) => {\n  const {\n    end: { endColumn, endNote },\n    begin: { beginColumn, beginNote },\n  } = payload;\n  if (endColumn === beginColumn) {\n    const result = [...state.columns[endColumn - 1].notes];\n    const [removed] = result.splice(beginNote, 1);\n    result.splice(endNote, 0, removed);\n\n    return {\n      ...state,\n      columns: [...state.columns].map((column) => {\n        if (column.columnId === endColumn) {\n          return { ...column, notes: [...result] };\n        }\n        return column;\n      }),\n    };\n  }\n  const beginCloneNotes = [...state.columns[beginColumn - 1].notes];\n  const endCloneNotes = [...state.columns[endColumn - 1].notes];\n  const [removed] = beginCloneNotes.splice(beginNote, 1);\n  endCloneNotes.splice(endNote, 0, removed);\n  const beginCloneColumn = { ...state.columns[beginColumn - 1] };\n  const endCloneColumn = { ...state.columns[endColumn - 1] };\n  beginCloneColumn.notes = beginCloneNotes;\n  endCloneColumn.notes = endCloneNotes;\n\n  return {\n    ...state,\n    columns: [...state.columns].map((column) => {\n      if (column.columnId === endColumn) {\n        return { ...endCloneColumn };\n      }\n      if (column.columnId === beginColumn) {\n        return { ...beginCloneColumn };\n      }\n      return column;\n    }),\n  };\n};\n\nconst addColumn = (state, payload) => ({\n  ...state,\n  columns: [\n    ...state.columns,\n    { columnId: state.columns.length + 1, name: payload, notes: [] },\n  ],\n});\n\nconst addNote = (state, { columnId, title }) => ({\n  ...state,\n  quantityNotes: state.quantityNotes + 1,\n  columns: [...state.columns].map((column) => {\n    if (column.columnId === columnId) {\n      return {\n        ...column,\n        notes: [...column.notes, { noteId: state.quantityNotes + 1, title }],\n      };\n    }\n    return column;\n  }),\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CHANGE_NOTE_LOCATION:\n      return changeNoteLocation(state, payload);\n    case ADD_COLUMN:\n      return addColumn(state, payload);\n    case ADD_NOTE:\n      return addNote(state, payload);\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport board from './board';\n\nexport default combineReducers({\n  board,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './Components/App';\nimport reportWebVitals from './tools/reportWebVitals';\nimport reducers from './Components/redux/reducers';\nimport './index.css';\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />{' '}\n  </Provider>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}