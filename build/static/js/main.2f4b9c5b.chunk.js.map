{"version":3,"sources":["Components/pages/Board/Components/AddColumn/AddColumn.module.css","Components/pages/Board/Components/Note/Note.module.css","Components/pages/Board/Components/Column/Column.module.css","Components/pages/Board/Board.module.css","Components/redux/constants/board.js","Components/redux/actions/board.js","Components/pages/Board/Components/Column/Column.js","Components/pages/Board/Components/AddColumn/AddColumn.js","Components/pages/Board/Components/Note/Note.js","Components/pages/Board/Board.js","Components/App.js","tools/reportWebVitals.js","Components/redux/reducers/board.js","Components/redux/reducers/index.js","index.js"],"names":["module","exports","CHANGE_NOTE_LOCATION","ADD_COLUMN","changeNoteLocation","payload","type","addColumn","Column","title","available","children","className","styles","container","style","background","titleContainer","Typography","component","variant","Tooltip","aria-label","IconButton","size","fontSize","defaultProps","connect","dispatch","bindActionCreators","noteActions","useState","showButton","setState","setTitle","Button","color","startIcon","onClick","ClickAwayListener","onClickAway","formContainer","TextField","id","value","onChange","target","input","button","marginTop","Note","Paper","note","noteTitle","icons","user","Avatar","width","height","Board","boardId","columns","changeLocation","setAvailable","elevation","columnContainer","onDragEnd","result","source","destination","includes","droppableId","split","pop","begin","beginNote","index","beginColumn","createBegin","end","endNote","endColumn","createEnd","onDragStart","map","columnId","name","notes","provided","ref","innerRef","droppableProps","length","noteId","draggableId","draggableProps","dragHandleProps","placeholder","state","board","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","quantityNotes","splice","removed","column","beginCloneNotes","endCloneNotes","beginCloneColumn","endCloneColumn","combineReducers","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f4b9c5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddColumn_container__7JK5Z\",\"formContainer\":\"AddColumn_formContainer__F-q6p\",\"input\":\"AddColumn_input__1qnwq\",\"button\":\"AddColumn_button__28_r8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"Note_note__1UNcz\",\"noteTitle\":\"Note_noteTitle__cqtX5\",\"icons\":\"Note_icons__2khkw\",\"user\":\"Note_user__2RWIw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Column_container__1-EF3\",\"titleContainer\":\"Column_titleContainer__3qSKc\",\"title\":\"Column_title__23xzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Board_container__NTJQL\",\"title\":\"Board_title__3nLKm\",\"columnContainer\":\"Board_columnContainer__D4fui\"};","export const CHANGE_NOTE_LOCATION = 'CHANGE_NOTE_LOCATION';\nexport const ADD_COLUMN = 'ADD_COLUMN';\n","import { CHANGE_NOTE_LOCATION, ADD_COLUMN } from '../constants/board';\n\nexport const changeNoteLocation = (payload) => ({\n  type: CHANGE_NOTE_LOCATION,\n  payload,\n});\n\nexport const addColumn = (payload) => ({\n  type: ADD_COLUMN,\n  payload,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport styles from './Column.module.css';\n\nconst Column = ({ title, available, children }) => (\n  <div\n    className={styles.container}\n    style={{ background: available ? '#f4f5f7' : 'red' }}\n  >\n    <div className={styles.titleContainer}>\n      <Typography component=\"p\" variant=\"body1\" className={styles.title}>\n        {title}\n      </Typography>\n      <Tooltip title=\"Добавить заметку\" aria-label=\"add\">\n        <IconButton aria-label=\"Добавить\" size=\"small\">\n          <AddIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n    </div>\n    <div>{children}</div>\n  </div>\n);\n\nColumn.propTypes = {\n  title: PropTypes.string,\n  available: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.shape({}),\n    PropTypes.arrayOf(PropTypes.shape({})),\n  ]),\n};\n\nColumn.defaultProps = {\n  available: true,\n  children: [],\n  title: '',\n};\n\nexport default Column;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport * as noteActions from '../../../../redux/actions/board';\nimport styles from './AddColumn.module.css';\n\nconst AddColumn = ({ addColumn }) => {\n  const [showButton, setState] = useState(true);\n  const [title, setTitle] = useState('');\n\n  return (\n    <div className={styles.container}>\n      {showButton ? (\n        <Button\n          variant=\"outlined\"\n          color=\"default\"\n          startIcon={<NoteAddIcon />}\n          onClick={() => setState(false)}\n        >\n          Добавить ещё одну колонку\n        </Button>\n      ) : (\n        <ClickAwayListener onClickAway={() => setState(true)}>\n          <div className={styles.formContainer}>\n            <TextField\n              id=\"add-column\"\n              value={title}\n              onChange={({ target: { value } }) => setTitle(value)}\n              className={styles.input}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => {\n                addColumn(title);\n                setState(true);\n                setTitle('');\n              }}\n              className={styles.button}\n              style={{ fontSize: 12, marginTop: 10, background: 'seagreen' }}\n            >\n              Сохранить\n            </Button>\n          </div>\n        </ClickAwayListener>\n      )}\n    </div>\n  );\n};\n\nAddColumn.propTypes = {\n  addColumn: PropTypes.func.isRequired,\n};\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      addColumn: noteActions.addColumn,\n    },\n    dispatch,\n  );\n\nexport default connect('', mapDispatch)(AddColumn);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport styles from './Note.module.css';\n\nconst Note = ({ title }) => (\n  <Paper className={styles.note}>\n    <Typography component=\"p\" variant=\"caption\" className={styles.noteTitle}>\n      {title}\n    </Typography>\n    <div className={styles.icons} />\n    <div className={styles.user}>\n      <Avatar style={{ width: 35, height: 35 }}>A</Avatar>\n    </div>\n  </Paper>\n);\n\nNote.propTypes = {\n  title: PropTypes.string,\n};\n\nNote.defaultProps = {\n  title: '',\n};\n\nexport default Note;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport * as noteActions from '../../redux/actions/board';\n\nimport Column from './Components/Column/Column';\nimport AddColumn from './Components/AddColumn/AddColumn';\nimport Note from './Components/Note/Note';\nimport styles from './Board.module.css';\n\nconst Board = ({ boardId, columns, changeLocation }) => {\n  const [available, setAvailable] = useState([]);\n\n  const onDragAndDrop = (result) => {\n    const { source, destination } = result;\n    if (!destination) {\n      return;\n    }\n    const createBegin = ({ droppableId, index }) => ({\n      beginNote: index,\n      beginColumn: +droppableId.split('-').pop(),\n    });\n    const createEnd = ({ droppableId, index }) => ({\n      endNote: index,\n      endColumn: +droppableId.split('-').pop(),\n    });\n\n    if (available.includes(+destination.droppableId.split('-').pop())) {\n      changeLocation({\n        begin: createBegin(source),\n        end: createEnd(destination),\n      });\n    }\n    setAvailable([]);\n  };\n\n  const onDragStart = (result) => {\n    const {\n      source: { droppableId },\n    } = result;\n    const index = +droppableId.split('-').pop();\n    setAvailable([index - 1, index, index + 1]);\n  };\n\n  return (\n    <Paper elevation={3} className={styles.container}>\n      <Typography component=\"h3\" variant=\"h3\" className={styles.title}>\n        Board\n      </Typography>\n      <div className={styles.columnContainer} key={boardId}>\n        <DragDropContext onDragEnd={onDragAndDrop} onDragStart={onDragStart}>\n          {columns.map(({ columnId, name, notes }) => (\n            <Droppable\n              droppableId={`column-${columnId}`}\n              key={`column-${columnId}`}\n            >\n              {(provided) => (\n                <div\n                  key={columnId}\n                  className={`column-${columnId}`}\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  <Column\n                    title={name}\n                    available={\n                      available.length === 0\n                        ? true\n                        : available.includes(columnId)\n                    }\n                  >\n                    {notes.map(({ noteId, title }, index) => (\n                      <Draggable\n                        key={`column-${columnId}_note-${noteId}`}\n                        draggableId={`column-${columnId}_note-${noteId}`}\n                        index={index}\n                      >\n                        {/* eslint-disable-next-line no-shadow */}\n                        {(provided) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <Note title={title} />\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                  </Column>\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </DragDropContext>\n        <AddColumn />\n      </div>\n    </Paper>\n  );\n};\n\nBoard.propTypes = {\n  boardId: PropTypes.number.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      columnId: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      notes: PropTypes.arrayOf(PropTypes.shape({})),\n    }),\n  ),\n  changeLocation: PropTypes.func.isRequired,\n};\n\nBoard.defaultProps = {\n  columns: [],\n};\n\nconst mapState = (state) => ({\n  boardId: state.board.boardId || 0,\n  columns: state.board.columns || [],\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      changeLocation: noteActions.changeNoteLocation,\n    },\n    dispatch,\n  );\n\nexport default connect(mapState, mapDispatch)(Board);\n","import React from 'react';\nimport Board from './pages/Board/Board';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n\n/* import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Board from './pages/Board/Board';\nimport './App.css';\n\nconst finalSpaceCharacters = [\n  {\n    id: 'gary',\n    name: 'Gary Goodspeed',\n    thumb: '/images/gary.png',\n  },\n  {\n    id: 'cato',\n    name: 'Little Cato',\n    thumb: '/images/cato.png',\n  },\n  {\n    id: 'kvn',\n    name: 'KVN',\n    thumb: '/images/kvn.png',\n  },\n  {\n    id: 'mooncake',\n    name: 'Mooncake',\n    thumb: '/images/mooncake.png',\n  },\n  {\n    id: 'quinn',\n    name: 'Quinn Ergon',\n    thumb: '/images/quinn.png',\n  },\n];\n\nfunction App() {\n  const [characters, updateCharacters] = useState(finalSpaceCharacters);\n\n  function handleOnDragEnd(result) {\n    console.info(result);\n    if (!result.destination) return;\n\n    const items = Array.from(characters);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    updateCharacters(items);\n  }\n\n  return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Final Space Characters</h1>\n          <DragDropContext onDragEnd={handleOnDragEnd}>\n            <Droppable droppableId=\"characters\">\n              {(provided) => (\n                  <ul\n                      className=\"characters\"\n                      {...provided.droppableProps}\n                      ref={provided.innerRef}\n                  >\n                    {characters.map(({ id, name, thumb }, index) => (\n                        <Draggable key={id} draggableId={id} index={index}>\n                          {/!* eslint-disable-next-line no-shadow *!/}\n                          {(provided) => (\n                              <li\n                                  ref={provided.innerRef}\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                              >\n                                <div className=\"characters-thumb\">\n                                  <img src={thumb} alt={`${name} Thumb`} />\n                                </div>\n                                <p>{name}</p>\n                              </li>\n                          )}\n                        </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </ul>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </header>\n        <p>\n          Images from{' '}\n          <a href=\"https://final-space.fandom.com/wiki/Final_Space_Wiki\">\n            Final Space Wiki\n          </a>\n        </p>\n        <Board />\n      </div>\n  );\n}\n\nexport default App; */\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CHANGE_NOTE_LOCATION, ADD_COLUMN } from '../constants/board';\n\nconst initialState = {\n  boardId: 1,\n  quantityNotes: 8,\n  columns: [\n    {\n      columnId: 1,\n      name: 'Наряды',\n      notes: [\n        { noteId: 1, title: 'Установка плит под фундамент' },\n        {\n          noteId: 2,\n          title:\n            'Земельные работы по подготовке площадки по установке плит для несущей стены',\n        },\n      ],\n    },\n    {\n      columnId: 2,\n      name: 'В работе',\n      notes: [\n        { noteId: 3, title: 'Установка плит под фундамент' },\n        { noteId: 4, title: 'Установка плит под фундамент' },\n      ],\n    },\n    {\n      columnId: 3,\n      name: 'Приёмка',\n      notes: [\n        {\n          noteId: 5,\n          title:\n            'Земельные работы по подготовке площадки по установке плит для несущей стены',\n        },\n        { noteId: 6, title: 'Установка плит под фундамент' },\n      ],\n    },\n    {\n      columnId: 4,\n      name: 'Завершено',\n      notes: [\n        { noteId: 7, title: 'Установка плит под фундамент' },\n        { noteId: 8, title: 'Установка плит под фундамент' },\n      ],\n    },\n  ],\n};\n\nconst changeNoteLocation = (state, payload) => {\n  const {\n    end: { endColumn, endNote },\n    begin: { beginColumn, beginNote },\n  } = payload;\n  if (endColumn === beginColumn) {\n    const result = [...state.columns[endColumn - 1].notes];\n    const [removed] = result.splice(beginNote, 1);\n    result.splice(endNote, 0, removed);\n\n    return {\n      ...state,\n      columns: [...state.columns].map((column) => {\n        if (column.columnId === endColumn) {\n          return { ...column, notes: [...result] };\n        }\n        return column;\n      }),\n    };\n  }\n  const beginCloneNotes = [...state.columns[beginColumn - 1].notes];\n  const endCloneNotes = [...state.columns[endColumn - 1].notes];\n  const [removed] = beginCloneNotes.splice(beginNote, 1);\n  endCloneNotes.splice(endNote, 0, removed);\n  const beginCloneColumn = { ...state.columns[beginColumn - 1] };\n  const endCloneColumn = { ...state.columns[endColumn - 1] };\n  beginCloneColumn.notes = beginCloneNotes;\n  endCloneColumn.notes = endCloneNotes;\n\n  return {\n    ...state,\n    columns: [...state.columns].map((column) => {\n      if (column.columnId === endColumn) {\n        return { ...endCloneColumn };\n      }\n      if (column.columnId === beginColumn) {\n        return { ...beginCloneColumn };\n      }\n      return column;\n    }),\n  };\n};\n\nconst addColumn = (state, payload) => ({\n  ...state,\n  columns: [\n    ...state.columns,\n    { columnId: state.columns.length + 1, name: payload, notes: [] },\n  ],\n});\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CHANGE_NOTE_LOCATION:\n      return changeNoteLocation(state, payload);\n    case ADD_COLUMN:\n      return addColumn(state, payload);\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport board from './board';\n\nexport default combineReducers({\n  board,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './Components/App';\nimport reportWebVitals from './tools/reportWebVitals';\nimport reducers from './Components/redux/reducers';\nimport './index.css';\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />{' '}\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}